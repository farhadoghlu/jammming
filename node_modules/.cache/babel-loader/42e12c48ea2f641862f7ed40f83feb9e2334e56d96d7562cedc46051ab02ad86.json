{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AsusVivoBooK\\\\Desktop\\\\React apps\\\\jammming\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport BlockUI from \"../BlockUI/BlockUI\";\nimport \"./App.css\";\nimport AppContainer from \"../../containers/App/AppContainer\";\nimport { search } from \"../../utils/Spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"Playlist Name\");\n  const [blocking, setBlocking] = useState(false);\n  const popupMessage = (title, message, icon) => {\n    Swal.fire(title, message, icon);\n  };\n  const toggleBlocking = () => {\n    setBlocking(!blocking);\n  };\n  const searchOnSpotify = async term => {\n    if (term.trim() === \"\") {\n      popupMessage(\"Warning!\", \"Enter a search term.\", \"warning\");\n    } else {\n      // toggleBlocking();\n      console.log('searchOnSpotify block 1', blocking);\n      const response = await search(term);\n      // toggleBlocking();\n      console.log('searchOnSpotify block 2', blocking);\n      if (!response) return;else if (response.length === 0) popupMessage(\"Error!\", `No results found for: ${term}.`, \"error\");else setSearchResults(response);\n    }\n  };\n  const addTrack = track => {\n    if (playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    //Track not found in PLaylist\n\n    //Array copy\n    let newPlaylistTrack = [...playlistTracks];\n    newPlaylistTrack.push(track);\n    setPlaylistTracks(newPlaylistTrack);\n  };\n  const removeTrack = track => {\n    const newPlaylistTrack = playlistTracks.filter(savedTrack => savedTrack.id !== track.id);\n    setPlaylistTracks(newPlaylistTrack);\n  };\n  const updatePlaylistName = newName => {\n    setPlaylistName(newName);\n  };\n  const savePlaylist = async () => {\n    const tracksUris = playlistTracks.map(track => track.uri);\n    const noTracks = tracksUris.length === 0;\n    const noPlaylistName = playlistName.trim() === \"\";\n    if (!noTracks && !noPlaylistName) {\n      setBlocking(true); // Toggle blocking before the asynchronous call\n\n      console.log('savePlaylist block 1', blocking);\n      // await savePlaylist(playlistName, tracksUris); // This line seems to be calling savePlaylist again\n      console.log('savePlaylist block 2', blocking);\n      setBlocking(false); // Toggle blocking after the asynchronous call\n\n      setPlaylistName(\"Playlist Name\");\n      setPlaylistTracks([]);\n      popupMessage(\"Saved!\", \"Playlist saved to your account.\", \"success\");\n    } else {\n      if (noPlaylistName) popupMessage(\"Warning!\", \"Choose a name for your playlist.\", \"warning\");else if (noTracks) popupMessage(\"Warning!\", \"Add some tracks first.\", \"warning\");else popupMessage(\"Warning!\", \"Create your playlist first.\", \"warning\");\n    }\n  };\n\n  // We don't render JSX in stateful components. We send JSX to stateless components.\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    onSearch: searchOnSpotify,\n    onAdd: addTrack,\n    searchResults: searchResults,\n    onRemove: removeTrack,\n    onNameChange: updatePlaylistName,\n    onSave: savePlaylist,\n    playlistTracks: playlistTracks,\n    playlistName: playlistName,\n    blocking: blocking\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"2zV1daSihnHGx0dtwrVSs+9U4m0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Swal","BlockUI","AppContainer","search","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlistTracks","setPlaylistTracks","playlistName","setPlaylistName","blocking","setBlocking","popupMessage","title","message","icon","fire","toggleBlocking","searchOnSpotify","term","trim","console","log","response","length","addTrack","track","find","savedTrack","id","newPlaylistTrack","push","removeTrack","filter","updatePlaylistName","newName","savePlaylist","tracksUris","map","uri","noTracks","noPlaylistName","onSearch","onAdd","onRemove","onNameChange","onSave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AsusVivoBooK/Desktop/React apps/jammming/src/components/App/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Swal from \"sweetalert2\";\nimport BlockUI from \"../BlockUI/BlockUI\";\nimport \"./App.css\";\n\nimport AppContainer from \"../../containers/App/AppContainer\";\n\nimport { search } from \"../../utils/Spotify\"\n\nconst App = () => {\n    const [searchResults, setSearchResults] = useState([]);\n    const [playlistTracks, setPlaylistTracks] = useState([]);\n    const [playlistName, setPlaylistName] = useState(\"Playlist Name\");\n    const [blocking, setBlocking] = useState(false);\n\n    const popupMessage = (title, message, icon) => {\n        Swal.fire(title, message, icon);\n    }\n\n    const toggleBlocking = () => {\n        setBlocking( !blocking );\n    }\n\n    const searchOnSpotify = async (term) => {\n        if (term.trim() === \"\") {\n            popupMessage(\"Warning!\", \"Enter a search term.\", \"warning\");\n        } else {\n            // toggleBlocking();\n            console.log('searchOnSpotify block 1', blocking)\n            const response = await search(term);\n            // toggleBlocking();\n            console.log('searchOnSpotify block 2', blocking)\n\n            if (!response) return;\n            else if (response.length === 0)\n                popupMessage(\"Error!\", `No results found for: ${term}.`, \"error\");\n            else setSearchResults( response );\n        }\n    }\n\n    const addTrack = (track) => {\n        if (\n            playlistTracks.find((savedTrack) => savedTrack.id === track.id)\n        ) {\n            return;\n        }\n        //Track not found in PLaylist\n\n        //Array copy\n        let newPlaylistTrack = [...playlistTracks];\n        newPlaylistTrack.push(track);\n        setPlaylistTracks( newPlaylistTrack );\n    };\n\n    const removeTrack = (track) => {\n        const newPlaylistTrack = playlistTracks.filter(\n            (savedTrack) => savedTrack.id !== track.id\n        );\n        setPlaylistTracks( newPlaylistTrack );\n    }\n\n    const updatePlaylistName = (newName) => {\n        setPlaylistName( newName );\n    }\n\n    const savePlaylist = async () => {\n        const tracksUris = playlistTracks.map((track) => track.uri);\n        const noTracks = tracksUris.length === 0;\n        const noPlaylistName = playlistName.trim() === \"\";\n\n        if (!noTracks && !noPlaylistName) {\n            setBlocking(true); // Toggle blocking before the asynchronous call\n\n            console.log('savePlaylist block 1', blocking);\n            // await savePlaylist(playlistName, tracksUris); // This line seems to be calling savePlaylist again\n            console.log('savePlaylist block 2', blocking);\n\n            setBlocking(false); // Toggle blocking after the asynchronous call\n\n            setPlaylistName(\"Playlist Name\");\n            setPlaylistTracks([]);\n            popupMessage(\"Saved!\", \"Playlist saved to your account.\", \"success\");\n        } else {\n            if (noPlaylistName)\n                popupMessage(\n                    \"Warning!\",\n                    \"Choose a name for your playlist.\",\n                    \"warning\"\n                );\n            else if (noTracks)\n                popupMessage(\"Warning!\", \"Add some tracks first.\", \"warning\");\n            else\n                popupMessage(\"Warning!\", \"Create your playlist first.\", \"warning\");\n        }\n    }\n\n\n    // We don't render JSX in stateful components. We send JSX to stateless components.\n    return (\n        <AppContainer\n            onSearch={searchOnSpotify}\n            onAdd={addTrack}\n            searchResults={searchResults}\n            onRemove={removeTrack}\n            onNameChange={updatePlaylistName}\n            onSave={savePlaylist}\n            playlistTracks={playlistTracks}\n            playlistName={playlistName}\n            blocking={blocking}\n        />\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}