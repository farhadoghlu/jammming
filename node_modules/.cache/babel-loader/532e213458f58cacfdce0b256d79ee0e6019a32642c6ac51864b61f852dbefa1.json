{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AsusVivoBooK\\\\Desktop\\\\React apps\\\\jammming\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport AppContainer from \"../../containers/App/AppContainer\";\nimport { search } from \"../../utils/Spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const searchOnSpotify = term => {\n    search(term).then(tracks => {\n      setTracks(tracks);\n    });\n  };\n  const playlistTracks = [];\n  const addTrack = track => {\n    if (this.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    //Track not found in PLaylist\n\n    //Array copy\n    let newPlaylistTrack = [...this.playlistTracks];\n    newPlaylistTrack.push(track);\n    this.setState({\n      playlistTracks: newPlaylistTrack\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    searchOnSpotify: searchOnSpotify,\n    tracks: tracks,\n    onAdd: addTrack()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"L1pLig/GVCA9Hd5Koxqlpeo2zIY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AppContainer","search","jsxDEV","_jsxDEV","App","_s","tracks","setTracks","searchOnSpotify","term","then","playlistTracks","addTrack","track","find","savedTrack","id","newPlaylistTrack","push","setState","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AsusVivoBooK/Desktop/React apps/jammming/src/components/App/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"./App.css\";\n\nimport AppContainer from \"../../containers/App/AppContainer\";\n\nimport { search } from \"../../utils/Spotify\"\n\nconst App = () => {\n    const [tracks, setTracks] = useState([]);\n\n    const searchOnSpotify = (term) => {\n        search(term).then(tracks => {\n            setTracks((tracks));\n        });\n    };\n\n    const playlistTracks = [];\n    const addTrack = (track) => {\n        if (\n            this.playlistTracks.find((savedTrack) => savedTrack.id === track.id)\n        ) {\n            return;\n        }\n        //Track not found in PLaylist\n\n        //Array copy\n        let newPlaylistTrack = [...this.playlistTracks];\n        newPlaylistTrack.push(track);\n        this.setState({ playlistTracks: newPlaylistTrack });\n    };\n\n    return (\n        <AppContainer\n            searchOnSpotify={searchOnSpotify}\n            tracks={tracks}\n            onAdd={addTrack()}\n        />\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAElB,OAAOC,YAAY,MAAM,mCAAmC;AAE5D,SAASC,MAAM,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,eAAe,GAAIC,IAAI,IAAK;IAC9BR,MAAM,CAACQ,IAAI,CAAC,CAACC,IAAI,CAACJ,MAAM,IAAI;MACxBC,SAAS,CAAED,MAAO,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,cAAc,GAAG,EAAE;EACzB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxB,IACI,IAAI,CAACF,cAAc,CAACG,IAAI,CAAEC,UAAU,IAAKA,UAAU,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC,EACtE;MACE;IACJ;IACA;;IAEA;IACA,IAAIC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAACN,cAAc,CAAC;IAC/CM,gBAAgB,CAACC,IAAI,CAACL,KAAK,CAAC;IAC5B,IAAI,CAACM,QAAQ,CAAC;MAAER,cAAc,EAAEM;IAAiB,CAAC,CAAC;EACvD,CAAC;EAED,oBACId,OAAA,CAACH,YAAY;IACTQ,eAAe,EAAEA,eAAgB;IACjCF,MAAM,EAAEA,MAAO;IACfc,KAAK,EAAER,QAAQ,CAAC;EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAAnB,EAAA,CA/BKD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}