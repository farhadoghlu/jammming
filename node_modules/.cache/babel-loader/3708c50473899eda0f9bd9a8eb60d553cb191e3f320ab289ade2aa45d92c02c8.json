{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\nvar _collections = require('../collections');\nvar global = function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')();\n  }\n}();\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nconst asymmetricMatcher = typeof Symbol === 'function' && Symbol.for ? Symbol.for('jest.asymmetricMatcher') : 0x1357a5;\nconst SPACE = ' ';\nconst serialize = (val, config, indentation, depth, refs, printer) => {\n  const stringedValue = val.toString();\n  if (stringedValue === 'ArrayContaining' || stringedValue === 'ArrayNotContaining') {\n    if (++depth > config.maxDepth) {\n      return '[' + stringedValue + ']';\n    }\n    return stringedValue + SPACE + '[' + (0, _collections.printListItems)(val.sample, config, indentation, depth, refs, printer) + ']';\n  }\n  if (stringedValue === 'ObjectContaining' || stringedValue === 'ObjectNotContaining') {\n    if (++depth > config.maxDepth) {\n      return '[' + stringedValue + ']';\n    }\n    return stringedValue + SPACE + '{' + (0, _collections.printObjectProperties)(val.sample, config, indentation, depth, refs, printer) + '}';\n  }\n  if (stringedValue === 'StringMatching' || stringedValue === 'StringNotMatching') {\n    return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);\n  }\n  if (stringedValue === 'StringContaining' || stringedValue === 'StringNotContaining') {\n    return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);\n  }\n  return val.toAsymmetricMatcher();\n};\nexports.serialize = serialize;\nconst test = val => val && val.$$typeof === asymmetricMatcher;\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}