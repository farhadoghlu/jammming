{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AsusVivoBooK\\\\Desktop\\\\React apps\\\\jammming\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport BlockUI from \"../BlockUI/BlockUI\";\nimport \"./App.css\";\nimport AppContainer from \"../../containers/App/AppContainer\";\nimport { search } from \"../../utils/Spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const popupMessage = (title, message, icon) => {\n    Swal.fire(title, message, icon);\n  };\n  const toggleBlocking = () => {\n    this.setState({\n      blocking: !this.state.blocking\n    });\n  };\n  const searchOnSpotify = async term => {\n    if (term.trim() === \"\") {\n      this.popupMessage(\"Warning!\", \"Enter a search term.\", \"warning\");\n    } else {\n      this.toggleBlocking();\n      const response = await search(term);\n      this.toggleBlocking();\n      if (!response) return;else if (response.length === 0) this.popupMessage(\"Error!\", `No results found for: ${term}.`, \"error\");else this.setState({\n        searchResults: response\n      });\n    }\n  };\n  const addTrack = track => {\n    if (this.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    //Track not found in PLaylist\n\n    //Array copy\n    let newPlaylistTrack = [...this.playlistTracks];\n    newPlaylistTrack.push(track);\n    this.setState({\n      playlistTracks: newPlaylistTrack\n    });\n  };\n  const removeTrack = track => {\n    const newPlaylistTrack = this.playlistTracks.filter(savedTrack => savedTrack.id !== track.id);\n    this.setState({\n      playlistTracks: newPlaylistTrack\n    });\n  };\n  const updatePlaylistName = newName => {\n    this.setState({\n      playlistName: newName\n    });\n  };\n  const savePlaylist = async () => {\n    const tracksUris = this.playlistTracks.map(track => track.uri);\n    const noTracks = tracksUris.length === 0;\n    const noPlaylistName = this.playlistName.trim() === \"\";\n    if (!noTracks && !noPlaylistName) {\n      this.toggleBlocking();\n      await savePlaylist(this.playlistName, tracksUris);\n      this.toggleBlocking();\n      this.setState({\n        playlistName: \"Playlist Name\",\n        playlistTracks: []\n      });\n      this.popupMessage(\"Saved!\", \"Playlist saved to your account.\", \"success\");\n    } else {\n      if (noPlaylistName) this.popupMessage(\"Warning!\", \"Choose a name for your playlist.\", \"warning\");else if (noTracks) this.popupMessage(\"Warning!\", \"Add some tracks first.\", \"warning\");else this.popupMessage(\"Warning!\", \"Create your playlist first.\", \"warning\");\n    }\n  };\n\n  // don't use JSX because this is statefull component\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    onSearch: searchOnSpotify,\n    onAdd: this.addTrack,\n    searchResults: this.searchResults,\n    onRemove: this.removeTrack,\n    onNameChange: this.updatePlaylistName,\n    onSave: this.savePlaylist,\n    playlistTracks: this.playlistTracks,\n    playlistName: this.playlistNamez\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"EZbT0yq6a/gh02pwPRuvKU69Sog=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Swal","BlockUI","AppContainer","search","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlistTracks","setPlaylistTracks","popupMessage","title","message","icon","fire","toggleBlocking","setState","blocking","state","searchOnSpotify","term","trim","response","length","addTrack","track","find","savedTrack","id","newPlaylistTrack","push","removeTrack","filter","updatePlaylistName","newName","playlistName","savePlaylist","tracksUris","map","uri","noTracks","noPlaylistName","onSearch","onAdd","onRemove","onNameChange","onSave","playlistNamez","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AsusVivoBooK/Desktop/React apps/jammming/src/components/App/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Swal from \"sweetalert2\";\nimport BlockUI from \"../BlockUI/BlockUI\";\nimport \"./App.css\";\n\nimport AppContainer from \"../../containers/App/AppContainer\";\n\nimport { search } from \"../../utils/Spotify\"\n\nconst App = () => {\n    const [searchResults, setSearchResults] = useState([]);\n    const [playlistTracks, setPlaylistTracks] = useState([]);\n\n    const popupMessage = (title, message, icon) => {\n        Swal.fire(title, message, icon);\n    }\n\n    const toggleBlocking = () => {\n        this.setState({ blocking: !this.state.blocking });\n    }\n\n    const searchOnSpotify = async (term) => {\n        if (term.trim() === \"\") {\n            this.popupMessage(\"Warning!\", \"Enter a search term.\", \"warning\");\n        } else {\n            this.toggleBlocking();\n            const response = await search(term);\n            this.toggleBlocking();\n\n            if (!response) return;\n            else if (response.length === 0)\n                this.popupMessage(\"Error!\", `No results found for: ${term}.`, \"error\");\n            else this.setState({ searchResults: response });\n        }\n    }\n\n    const addTrack = (track) => {\n        if (\n            this.playlistTracks.find((savedTrack) => savedTrack.id === track.id)\n        ) {\n            return;\n        }\n        //Track not found in PLaylist\n\n        //Array copy\n        let newPlaylistTrack = [...this.playlistTracks];\n        newPlaylistTrack.push(track);\n        this.setState({ playlistTracks: newPlaylistTrack });\n    };\n\n    const removeTrack = (track) => {\n        const newPlaylistTrack = this.playlistTracks.filter(\n            (savedTrack) => savedTrack.id !== track.id\n        );\n        this.setState({ playlistTracks: newPlaylistTrack });\n    }\n\n    const updatePlaylistName = (newName) => {\n        this.setState({ playlistName: newName });\n    }\n\n    const savePlaylist = async () => {\n        const tracksUris = this.playlistTracks.map((track) => track.uri);\n        const noTracks = tracksUris.length === 0;\n        const noPlaylistName = this.playlistName.trim() === \"\";\n        if (!noTracks && !noPlaylistName) {\n            this.toggleBlocking();\n            await savePlaylist(this.playlistName, tracksUris);\n            this.toggleBlocking();\n\n            this.setState({ playlistName: \"Playlist Name\", playlistTracks: [] });\n            this.popupMessage(\"Saved!\", \"Playlist saved to your account.\", \"success\");\n        } else {\n            if (noPlaylistName)\n                this.popupMessage(\n                    \"Warning!\",\n                    \"Choose a name for your playlist.\",\n                    \"warning\"\n                );\n            else if (noTracks)\n                this.popupMessage(\"Warning!\", \"Add some tracks first.\", \"warning\");\n            else\n                this.popupMessage(\"Warning!\", \"Create your playlist first.\", \"warning\");\n        }\n    }\n\n    // don't use JSX because this is statefull component\n    return (\n        <AppContainer\n            onSearch={searchOnSpotify}\n            onAdd={this.addTrack}\n            searchResults={this.searchResults}\n            onRemove={this.removeTrack}\n            onNameChange={this.updatePlaylistName}\n            onSave={this.savePlaylist}\n            playlistTracks={this.playlistTracks}\n            playlistName={this.playlistNamez}\n        />\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}